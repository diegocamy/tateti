{"version":3,"sources":["Celda.js","App.js","index.js"],"names":["Celda","props","clase","valor","className","onClick","dibujarTabla","coords","i","j","player","buscarGanador","App","state","tateti","juegoTerminado","mensaje","turnos","bind","reiniciarJuego","tablero","this","slice","setState","simbolo","map","arr","celda","key","Math","random","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.296a5c0a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Celda.css'\r\n\r\nexport default function Celda(props) {\r\n  let clase;\r\n  if (props.valor === \"X\") {\r\n    clase = \"Celda X\"\r\n  } else if (props.valor === \"O\") {\r\n    clase = \"Celda O\"\r\n  } else {\r\n    clase = \"Celda\"\r\n  }\r\n  return (\r\n    <div className={clase} onClick={\r\n      () => {\r\n        props.dibujarTabla(props.coords.i, props.coords.j, props.player)\r\n        props.buscarGanador();\r\n      }\r\n    }>\r\n      {props.valor}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport Celda from './Celda';\n\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tateti: [\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"]\n      ],\n      juegoTerminado: false,\n      mensaje: \"\",\n      player: 1,\n      turnos: 1\n    }\n    this.buscarGanador = this.buscarGanador.bind(this);\n    this.dibujarTabla = this.dibujarTabla.bind(this);\n    this.reiniciarJuego = this.reiniciarJuego.bind(this);\n  }\n\n\n  //BUSCAR DISTINTAS COMBINACIONES PARA UN POSIBLE GANADOR\n  buscarGanador() {\n    const tablero = this.state.tateti.slice();\n    let juegoTerminado = false;\n    let mensaje;\n\n    for (let i = 0; i < 3; i++) {\n\n      if (tablero[i][0] === tablero[i][1] && tablero[i][1] === tablero[i][2]) {\n        if (tablero[i][0] !== \"\") {\n          mensaje = `JUGADOR ${this.state.player} GANA!`;\n          juegoTerminado = true;\n        }\n      }\n\n      if (tablero[0][i] === tablero[1][i] && tablero[1][i] === tablero[2][i]) {\n        if (tablero[0][i] !== \"\") {\n          mensaje = `JUGADOR ${this.state.player} GANA!`;\n          juegoTerminado = true;\n        }\n      }\n    }\n\n\n    if (tablero[0][0] === tablero[1][1] && tablero[1][1] === tablero[2][2]) {\n      if (tablero[0][0] !== \"\") {\n        mensaje = `JUGADOR ${this.state.player} GANA!`;\n        juegoTerminado = true;\n      }\n    }\n\n    if (tablero[0][2] === tablero[1][1] && tablero[1][1] === tablero[2][0]) {\n      if (tablero[0][2] !== \"\") {\n        mensaje = `JUGADOR ${this.state.player} GANA!`;\n        juegoTerminado = true;\n      }\n    }\n\n    //SI LOS TURNOS LLEGAN A 9 Y NO HAY UN GANADOR, ES EMPATE\n    if (juegoTerminado === false && this.state.turnos === 9) {\n      mensaje = \"EMPATE!\"\n      juegoTerminado = true;\n    }\n\n    this.setState({ juegoTerminado, mensaje })\n  }\n\n  //REINICIAR EL JUEGO\n  reiniciarJuego() {\n    this.setState({\n      tateti: [\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"]\n      ],\n      juegoTerminado: false,\n      mensaje: \"\",\n      player: 1,\n      turnos: 1\n    })\n  }\n\n  //DIBUJAR EL SIMBOLO (X)/(0) EN EL LUGAR DONDE SE HAGA CLICK\n  //SIEMPRE Y CUANDO SEA UN ESPACIO VACIO\n  dibujarTabla(i, j, player) {\n    if (this.state.juegoTerminado === false) {\n      let tateti = this.state.tateti.slice();\n      let valor;\n      let turnos = this.state.turnos;\n      player === 1 ? valor = \"X\" : valor = \"O\";\n      if (tateti[i][j] === \"\") {\n        tateti[i][j] = valor;\n        if (turnos + 1 <= 9) {\n          turnos++;\n        }\n        player === 1 ? player = 2 : player = 1;\n        this.setState({\n          tateti,\n          player,\n          turnos\n        })\n      }\n    }\n\n  }\n\n  render() {\n    let simbolo = this.state.player === 1 ? \"X\" : \"O\"\n    let mensaje = this.state.juegoTerminado ? this.state.mensaje : `TURNO DEL JUGADOR ${this.state.player} [ ${simbolo} ]`;\n    return (\n      <div className=\"App\">\n        <h1>TA-TE-TI</h1>\n        <p>{mensaje}</p>\n        <div className=\"tateti-container\">\n          <div className=\"tateti\">\n            {this.state.tateti.map((arr, i) => {\n              return arr.map((celda, j) => {\n                return <Celda\n                  key={Math.random() * 67}\n                  valor={celda}\n                  coords={{ i, j }}\n                  player={this.state.player}\n                  dibujarTabla={this.dibujarTabla}\n                  buscarGanador={this.buscarGanador}\n                />\n              })\n            })}\n          </div>\n          {this.state.juegoTerminado && <button onClick={this.reiniciarJuego}>Jugar de nuevo?</button>}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}